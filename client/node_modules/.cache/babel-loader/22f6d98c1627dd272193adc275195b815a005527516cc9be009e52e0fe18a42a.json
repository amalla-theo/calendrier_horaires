{"ast":null,"code":"// ...existing code...\n\n// Retourne true si la date est un jour férié français (hors dimanche)\nfunction estJourFerie(date) {\n  const annee = date.getFullYear();\n  const joursFeries = [\n  // Jours fixes\n  `${annee}-01-01`,\n  // Jour de l'an\n  `${annee}-05-01`,\n  // Fête du travail\n  `${annee}-05-08`,\n  // Victoire 1945\n  `${annee}-07-14`,\n  // Fête nationale\n  `${annee}-08-15`,\n  // Assomption\n  `${annee}-11-01`,\n  // Toussaint\n  `${annee}-11-11`,\n  // Armistice\n  `${annee}-12-25` // Noël\n  // Jours mobiles (calculés plus bas)\n  ];\n\n  // Calcul de Pâques\n  function datePaques(y) {\n    const f = Math.floor,\n      G = y % 19,\n      C = f(y / 100),\n      H = (C - f(C / 4) - f((8 * C + 13) / 25) + 19 * G + 15) % 30,\n      I = H - f(H / 28) * (1 - f(29 / (H + 1)) * f((21 - G) / 11)),\n      J = (y + f(y / 4) + I + 2 - C + f(C / 4)) % 7,\n      L = I - J,\n      mois = 3 + f((L + 40) / 44),\n      jour = L + 28 - 31 * f(mois / 4);\n    return new Date(y, mois - 1, jour);\n  }\n  const paques = datePaques(annee);\n  const lundiPaques = new Date(paques);\n  lundiPaques.setDate(paques.getDate() + 1);\n  const ascension = new Date(paques);\n  ascension.setDate(paques.getDate() + 39);\n  const pentecote = new Date(paques);\n  pentecote.setDate(paques.getDate() + 50);\n  const format = d => d.toISOString().slice(0, 10);\n  joursFeries.push(format(lundiPaques));\n  joursFeries.push(format(ascension));\n  joursFeries.push(format(pentecote));\n\n  // Format de la date courante\n  const dateStr = format(date);\n  return joursFeries.includes(dateStr);\n}","map":{"version":3,"names":["estJourFerie","date","annee","getFullYear","joursFeries","datePaques","y","f","Math","floor","G","C","H","I","J","L","mois","jour","Date","paques","lundiPaques","setDate","getDate","ascension","pentecote","format","d","toISOString","slice","push","dateStr","includes"],"sources":["/home/dev1/Bureau/calendrier_horaires/client/src/components/CalendrierHebdo.js"],"sourcesContent":["// ...existing code...\n\n// Retourne true si la date est un jour férié français (hors dimanche)\nfunction estJourFerie(date) {\n  const annee = date.getFullYear();\n  const joursFeries = [\n    // Jours fixes\n    `${annee}-01-01`, // Jour de l'an\n    `${annee}-05-01`, // Fête du travail\n    `${annee}-05-08`, // Victoire 1945\n    `${annee}-07-14`, // Fête nationale\n    `${annee}-08-15`, // Assomption\n    `${annee}-11-01`, // Toussaint\n    `${annee}-11-11`, // Armistice\n    `${annee}-12-25`, // Noël\n    // Jours mobiles (calculés plus bas)\n  ];\n\n  // Calcul de Pâques\n  function datePaques(y) {\n    const f = Math.floor, G = y % 19, C = f(y / 100), H = (C - f(C / 4) - f((8 * C + 13) / 25) + 19 * G + 15) % 30,\n      I = H - f(H / 28) * (1 - f(29 / (H + 1)) * f((21 - G) / 11)), J = (y + f(y / 4) + I + 2 - C + f(C / 4)) % 7,\n      L = I - J, mois = 3 + f((L + 40) / 44), jour = L + 28 - 31 * f(mois / 4);\n    return new Date(y, mois - 1, jour);\n  }\n  const paques = datePaques(annee);\n  const lundiPaques = new Date(paques); lundiPaques.setDate(paques.getDate() + 1);\n  const ascension = new Date(paques); ascension.setDate(paques.getDate() + 39);\n  const pentecote = new Date(paques); pentecote.setDate(paques.getDate() + 50);\n\n  const format = d => d.toISOString().slice(0, 10);\n  joursFeries.push(format(lundiPaques));\n  joursFeries.push(format(ascension));\n  joursFeries.push(format(pentecote));\n\n  // Format de la date courante\n  const dateStr = format(date);\n  return joursFeries.includes(dateStr);\n}"],"mappings":"AAAA;;AAEA;AACA,SAASA,YAAYA,CAACC,IAAI,EAAE;EAC1B,MAAMC,KAAK,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;EAChC,MAAMC,WAAW,GAAG;EAClB;EACA,GAAGF,KAAK,QAAQ;EAAE;EAClB,GAAGA,KAAK,QAAQ;EAAE;EAClB,GAAGA,KAAK,QAAQ;EAAE;EAClB,GAAGA,KAAK,QAAQ;EAAE;EAClB,GAAGA,KAAK,QAAQ;EAAE;EAClB,GAAGA,KAAK,QAAQ;EAAE;EAClB,GAAGA,KAAK,QAAQ;EAAE;EAClB,GAAGA,KAAK,QAAQ,CAAE;EAClB;EAAA,CACD;;EAED;EACA,SAASG,UAAUA,CAACC,CAAC,EAAE;IACrB,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK;MAAEC,CAAC,GAAGJ,CAAC,GAAG,EAAE;MAAEK,CAAC,GAAGJ,CAAC,CAACD,CAAC,GAAG,GAAG,CAAC;MAAEM,CAAC,GAAG,CAACD,CAAC,GAAGJ,CAAC,CAACI,CAAC,GAAG,CAAC,CAAC,GAAGJ,CAAC,CAAC,CAAC,CAAC,GAAGI,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE,GAAGD,CAAC,GAAG,EAAE,IAAI,EAAE;MAC5GG,CAAC,GAAGD,CAAC,GAAGL,CAAC,CAACK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAGL,CAAC,CAAC,EAAE,IAAIK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGL,CAAC,CAAC,CAAC,EAAE,GAAGG,CAAC,IAAI,EAAE,CAAC,CAAC;MAAEI,CAAC,GAAG,CAACR,CAAC,GAAGC,CAAC,CAACD,CAAC,GAAG,CAAC,CAAC,GAAGO,CAAC,GAAG,CAAC,GAAGF,CAAC,GAAGJ,CAAC,CAACI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;MAC3GI,CAAC,GAAGF,CAAC,GAAGC,CAAC;MAAEE,IAAI,GAAG,CAAC,GAAGT,CAAC,CAAC,CAACQ,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC;MAAEE,IAAI,GAAGF,CAAC,GAAG,EAAE,GAAG,EAAE,GAAGR,CAAC,CAACS,IAAI,GAAG,CAAC,CAAC;IAC1E,OAAO,IAAIE,IAAI,CAACZ,CAAC,EAAEU,IAAI,GAAG,CAAC,EAAEC,IAAI,CAAC;EACpC;EACA,MAAME,MAAM,GAAGd,UAAU,CAACH,KAAK,CAAC;EAChC,MAAMkB,WAAW,GAAG,IAAIF,IAAI,CAACC,MAAM,CAAC;EAAEC,WAAW,CAACC,OAAO,CAACF,MAAM,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAC/E,MAAMC,SAAS,GAAG,IAAIL,IAAI,CAACC,MAAM,CAAC;EAAEI,SAAS,CAACF,OAAO,CAACF,MAAM,CAACG,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;EAC5E,MAAME,SAAS,GAAG,IAAIN,IAAI,CAACC,MAAM,CAAC;EAAEK,SAAS,CAACH,OAAO,CAACF,MAAM,CAACG,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;EAE5E,MAAMG,MAAM,GAAGC,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAChDxB,WAAW,CAACyB,IAAI,CAACJ,MAAM,CAACL,WAAW,CAAC,CAAC;EACrChB,WAAW,CAACyB,IAAI,CAACJ,MAAM,CAACF,SAAS,CAAC,CAAC;EACnCnB,WAAW,CAACyB,IAAI,CAACJ,MAAM,CAACD,SAAS,CAAC,CAAC;;EAEnC;EACA,MAAMM,OAAO,GAAGL,MAAM,CAACxB,IAAI,CAAC;EAC5B,OAAOG,WAAW,CAAC2B,QAAQ,CAACD,OAAO,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}